{"posts":[{"title":"Webpack从0到1构建Vue3","text":"创建项目可以直接用cli构建，命令行敲几下就完成了，但是为了加深对webpack的理解，方便以后能够灵活运用webpack，还是有必要学习下如何手写webpack配置 初始化目录结构123// 生成tsconfig.json和package.json文件npm init -ytsc --init // 没有tsc的话，要先执行 npm i -g typescript 手动新建目录，和cli保持一致 修改package.json脚本1234&quot;scripts&quot;: { &quot;dev&quot;: &quot;web-dev-server&quot;, &quot;build&quot;: &quot;webpack&quot;} 安装依赖包12345678910111213&quot;devDependencies&quot;: { &quot;clean-webpack-plugin&quot;: &quot;^4.0.0&quot;, &quot;html-webpack-plugin&quot;: &quot;^5.5.0&quot;, &quot;less&quot;: &quot;^4.1.3&quot;, &quot;less-loader&quot;: &quot;^11.0.0&quot;, &quot;style-loader&quot;: &quot;^3.3.1&quot;, &quot;typescript&quot;: &quot;^4.8.3&quot;, &quot;ts-loader&quot;: &quot;^9.3.1&quot;, &quot;vue-loader&quot;: &quot;^17.0.0&quot;, &quot;webpack&quot;: &quot;^5.74.0&quot;, &quot;webpack-cli&quot;: &quot;^4.10.0&quot;, &quot;webpack-dev-server&quot;: &quot;^4.11.0&quot; } public/index.html123456789101112&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 编写main.ts1234567891011import { createApp } from 'vue'import App from './App.vue'import './assets/main.less'const app = createApp(App)app.mount('#app') 编写App.vue123456789101112&lt;template&gt; &lt;div&gt; hello, {{name}} &lt;/div&gt;&lt;/template&gt;&lt;script setup lang=&quot;ts&quot;&gt; import {ref} from 'vue' const name = ref&lt;string&gt;('bouc') console.log('name:', name)&lt;/script&gt; 配置vue类型声明文件12345declare module &quot;*.vue&quot; { import { DefineComponent } from &quot;vue&quot; const component: DefineComponent&lt;{}, {}, any&gt; export default component} 配置webpack.config.js12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273onst { Configuration } = require('webpack')const path = require('path')const htmlWebpackPlugin = require('html-webpack-plugin')const { CleanWebpackPlugin } = require('clean-webpack-plugin')const { VueLoaderPlugin } = require('vue-loader/dist/index');const FriendlyErrorsWebpackPlugin = require(&quot;friendly-errors-webpack-plugin&quot;);/** * @type {Configuration} //配置智能提示 */const config = { mode: &quot;development&quot;, entry: './src/main.ts', //入口文件 output: { filename: &quot;[hash].js&quot;, path: path.resolve(__dirname, 'dist') //出口文件 }, module: { rules: [ { test: /\\.vue$/, //解析vue 模板 use: &quot;vue-loader&quot; }, { test: /\\.less$/, //解析 less use: [&quot;style-loader&quot;, &quot;css-loader&quot;, &quot;less-loader&quot;], }, { test: /\\.css$/, //解析css use: [&quot;style-loader&quot;, &quot;css-loader&quot;], }, { test: /\\.ts$/, //解析ts loader: &quot;ts-loader&quot;, options: { configFile: path.resolve(process.cwd(), 'tsconfig.json'), appendTsSuffixTo: [/\\.vue$/] }, } ] }, plugins: [ new htmlWebpackPlugin({ template: &quot;./public/index.html&quot; //html模板 }), new CleanWebpackPlugin(), //打包清空dist new VueLoaderPlugin(), //解析vue new FriendlyErrorsWebpackPlugin({ compilationSuccessInfo:{ //美化样式 messages:['You application is running here http://localhost:9001'] } }) ], resolve: { alias: { &quot;@&quot;: path.resolve(__dirname, './src') // 别名 }, extensions: ['.js', '.json', '.vue', '.ts', '.tsx'] //识别后缀 }, stats:&quot;errors-only&quot;, //取消提示 devServer: { proxy: {}, port: 9001, hot: true, open: true, }, externals: { vue: &quot;Vue&quot; //CDN 引入 },} module.exports = config 执行npm run dev 最终效果： 完整代码地址：https://github.com/bouc615/webpack-demo","link":"/2022/09/27/hello-world/"}],"tags":[{"name":"Vue3","slug":"Vue3","link":"/tags/Vue3/"},{"name":"Webpack","slug":"Webpack","link":"/tags/Webpack/"}],"categories":[{"name":"Vue3","slug":"Vue3","link":"/categories/Vue3/"}],"pages":[{"title":"分类","text":"","link":"/categories/index.html"},{"title":"关于本站","text":"神奇の沟通 沟通是 传递 沟通是 交流 沟通是 分享 沟通是 智慧 沟通是 友谊 沟通是 力量 “ 认识自我、超越自我 “ 是沟通的最高境界 当你在项目中感觉所要学习的人和事越来越多时，说明你在 成长 。 当你感觉要责怪的人和事越来越少时，说明你在 成熟 。 当你在项目中不断获得了友谊和朋友时，说明你将取得项目的 成功 。","link":"/about/index.html"}]}